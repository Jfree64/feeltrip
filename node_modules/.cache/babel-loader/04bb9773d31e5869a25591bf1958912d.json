{"ast":null,"code":"import _classCallCheck from \"/Users/jono/Documents/(+)/Personal Work/FeelTrip/feeltrip/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jono/Documents/(+)/Personal Work/FeelTrip/feeltrip/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jono/Documents/(+)/Personal Work/FeelTrip/feeltrip/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jono/Documents/(+)/Personal Work/FeelTrip/feeltrip/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jono/Documents/(+)/Personal Work/FeelTrip/feeltrip/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jono/Documents/(+)/Personal Work/FeelTrip/feeltrip/src/pages/donate/form/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar DonateForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DonateForm, _React$Component);\n\n  function DonateForm() {\n    _classCallCheck(this, DonateForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DonateForm).apply(this, arguments));\n  }\n\n  _createClass(DonateForm, [{\n    key: \"render\",\n\n    /*  componentDidMount() {\n        this.ifr.onload = () => {\n          this.ifr.contentWindow.postMessage('hello', '*');\n        };\n      }\n    \n      componentWillReceiveProps(nextProps) {\n        for (const [objectid, liveData] of Object.entries(nextProps.objectsLive)) {\n          const prevOn = this.props.objectsLive[objectid] ? this.props.objectsLive[objectid].on : null;\n          if (prevOn !== liveData.on) {\n            this.ifr.contentWindow.postMessage({ event: 'onoff', object: objectid, value: liveData.on }, '*');\n          }\n        }\n      }\n    \n      shouldComponentUpdate() {\n        return false;\n      }\n    \n      componentWillUnmount() {\n        window.removeEventListener('message', this.handleFrameTasks);\n      }\n    \n      sendToFrame(data) {\n        if(this.ifr) this.ifr.contentWindow.postMessage(data, '*');\n      }\n    \n      handleFrameTasks = (e) => {\n        if (e.data.type === 'bookmark') {\n          this.sendToFrame({ event: 'bookmark', data: window.location.hash ? window.location.hash.substr(1) : null });\n        }\n      } */\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        style: {\n          width: '100%',\n          height: '100vh'\n        },\n        src: \"https://ifundraise.nami.org/index.cfm?fuseaction=donateSimple.participant&isEmbedded=1&donRef=http%3A%2F%2Fifundraise.nami.org%2FddTest.html&palette=dark&participantID=1523\",\n        ref: function ref(f) {\n          _this.ifr = f;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DonateForm;\n}(React.Component);\n\nexport default DonateForm;","map":{"version":3,"sources":["/Users/jono/Documents/(+)/Personal Work/FeelTrip/feeltrip/src/pages/donate/form/index.js"],"names":["React","connect","DonateForm","width","height","f","ifr","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,U;;;;;;;;;;;;;;AACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAiCW;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SADT;AAEE,QAAA,GAAG,EAAC,8KAFN;AAGE,QAAA,GAAG,EAAE,aAACC,CAAD,EAAO;AAAE,UAAA,KAAI,CAACC,GAAL,GAAWD,CAAX;AAAe,SAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EA5CsBL,KAAK,CAACO,S;;AA+C/B,eAAeL,UAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nclass DonateForm extends React.Component {\n/*  componentDidMount() {\n    this.ifr.onload = () => {\n      this.ifr.contentWindow.postMessage('hello', '*');\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    for (const [objectid, liveData] of Object.entries(nextProps.objectsLive)) {\n      const prevOn = this.props.objectsLive[objectid] ? this.props.objectsLive[objectid].on : null;\n      if (prevOn !== liveData.on) {\n        this.ifr.contentWindow.postMessage({ event: 'onoff', object: objectid, value: liveData.on }, '*');\n      }\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.handleFrameTasks);\n  }\n\n  sendToFrame(data) {\n    if(this.ifr) this.ifr.contentWindow.postMessage(data, '*');\n  }\n\n  handleFrameTasks = (e) => {\n    if (e.data.type === 'bookmark') {\n      this.sendToFrame({ event: 'bookmark', data: window.location.hash ? window.location.hash.substr(1) : null });\n    }\n  } */\n\n  render() {\n    return (\n      <div>\n        <iframe\n          style={{ width: '100%', height: '100vh'}}\n          src=\"https://ifundraise.nami.org/index.cfm?fuseaction=donateSimple.participant&isEmbedded=1&donRef=http%3A%2F%2Fifundraise.nami.org%2FddTest.html&palette=dark&participantID=1523\"\n          ref={(f) => { this.ifr = f; }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DonateForm;\n"]},"metadata":{},"sourceType":"module"}