{"version":3,"sources":["../../../src/components/pagination/pagination.js"],"names":["Pagination","goToPage","evt","preventDefault","props","onChange","page","firstPage","current","total","delta","lastPage","next","previous","showPrevNext","autoHide","className","console","warn","undefined","Array","fill","map","_","i","PureComponent","propTypes","number","func","node","bool","string","defaultProps"],"mappings":"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","file":"pagination.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass Pagination extends React.PureComponent {\n  static propTypes = {\n    /** Current page */\n    current: PropTypes.number,\n    /** Total pages in total */\n    total: PropTypes.number,\n    /** Amount og pages to display at the left and right of the current (if delta 2 and current page is 3, the paginator will display pages from 1 to 5) */\n    delta: PropTypes.number,\n    onChange: PropTypes.func,\n    /** Text of the Next button */\n    next: PropTypes.node,\n    /** Text of the Previous button */\n    previous: PropTypes.node,\n    showPrevNext: PropTypes.bool,\n    autoHide: PropTypes.bool,\n    /**\n     * Classname of the container of the pagination, this could be used to customize the inner views\n     */\n    className: PropTypes.string,\n  }\n\n  static defaultProps = {\n    total: 1,\n    current: 1,\n    delta: 1,\n    onChange: () => {},\n    next: 'Next',\n    previous: 'Previous',\n    showPrevNext: true,\n    autoHide: true,\n    className: '',\n  }\n\n  goToPage = page => (evt) => {\n    evt.preventDefault();\n    this.props.onChange(page);\n  }\n\n  firstPage = (current, total) => {\n    if (current === 1) {\n      return 1;\n    }\n\n    const page = current - (this.props.delta * (current === total ? 2 : 1));\n\n    return page <= 0 ? 1 : page;\n  }\n\n  lastPage = (current, total) => {\n    if (current === total) {\n      return total;\n    }\n\n    const page = current + (this.props.delta * (current === 1 ? 2 : 1));\n\n    return page > total ? total : page;\n  }\n\n  render() {\n    const {\n      current,\n      total,\n      next,\n      previous,\n      showPrevNext,\n      delta,\n      autoHide,\n      className,\n      onChange,\n      ...props\n    } = this.props;\n    if (total <= 1 && autoHide) {\n      return null;\n    }\n\n    if (current > total) {\n      // eslint-disable-next-line no-console\n      console.warn('Pagination controller: Current page can not be greater than total');\n      return null;\n    }\n\n    const firstPage = this.firstPage(current, total);\n    const lastPage = this.lastPage(current, total);\n\n    return (\n      <nav\n        {...props}\n        className={classnames('pagination', className)}\n        aria-label=\"pagination\"\n      >\n        {\n          showPrevNext &&\n            <React.Fragment>\n              <a\n                role=\"button\"\n                tabIndex={0}\n                onClick={current === 1 ? undefined : this.goToPage(current - 1)}\n                className=\"pagination-previous\"\n                title=\"This is the first page\"\n                disabled={current === 1}\n              >\n                {previous}\n              </a>\n              <a\n                role=\"button\"\n                tabIndex={0}\n                onClick={current === total ? undefined : this.goToPage(current + 1)}\n                className=\"pagination-next\"\n                disabled={current === total}\n              >\n                {next}\n              </a>\n            </React.Fragment>\n        }\n        {\n          delta > 0 &&\n            <React.Fragment>\n              <ul className=\"pagination-list\">\n                {\n                  Array((lastPage - firstPage) + 1).fill(0).map((_, i) => (\n                    // eslint-disable-next-line react/no-array-index-key\n                    <li key={i + firstPage}>\n                      <a\n                        role=\"button\"\n                        tabIndex={0}\n                        className={classnames('pagination-link', {\n                          'is-current': current === i + firstPage,\n                        })}\n                        onClick={current === firstPage + i ? undefined : this.goToPage(firstPage + i)}\n                        aria-label={`Page ${i + firstPage}`}\n                        aria-current=\"page\"\n                      >\n                        {i + firstPage}\n                      </a>\n                    </li>\n                    ))\n                }\n              </ul>\n            </React.Fragment>\n        }\n      </nav>\n    );\n  }\n}\n\nexport default Pagination;\n"]}