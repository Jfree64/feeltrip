{"version":3,"sources":["../../../src/components/card/card.js"],"names":["Card","props","className","children","type","renderAs","console","warn","Element","propTypes","string","node","style","shape","oneOfType","func","oneOf","defaultProps","Image","Content","Header","Footer"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;IAEqBA,I;;;;;;;;;;;6BAyBV;AAAA;;AAAA,mBAOH,KAAKC,KAPF;AAAA,UAELC,SAFK,UAELA,SAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,UAILC,IAJK,UAILA,IAJK;AAAA,UAKLC,QALK,UAKLA,QALK;AAAA,UAMFJ,KANE;;AAQP,UAAIG,IAAJ,EAAU;AACR;AACAE,gBAAQC,IAAR,CAAa,2JAAb;AACD;AACD,UAAIH,SAAS,OAAb,EAAsB;AACpB,eAAO,4DAAeH,KAAf,IAAsB,WAAWC,SAAjC,IAAP;AACD;AACD,UAAMM,UAAUH,QAAhB;AACA,aACE;AAAC,eAAD;AAAA;AACE,qBAAW,0BAAWH,SAAX,4DACAE,IADA,EACSA,IADT,wCAEH,CAACA,IAFE;AADb,WAKMH,KALN;AAOGE;AAPH,OADF;AAWD;;;;;;AApDkBH,I,CACZS,S,GAAY;AACjBP,aAAW,oBAAUQ,MADJ;AAEjBP,YAAU,oBAAUQ,IAFH;AAGjBC,SAAO,oBAAUC,KAAV,CAAgB,EAAhB,CAHU;AAIjBR,YAAU,oBAAUS,SAAV,CAAoB,CAAC,oBAAUJ,MAAX,EAAmB,oBAAUK,IAA7B,CAApB,CAJO;AAKjB;;;AAGAX,QAAM,oBAAUY,KAAV,CAAgB,CAAC,QAAD,EAAW,aAAX,EAA0B,aAA1B,EAAyC,QAAzC,EAAmD,aAAnD,EAAkE,OAAlE,EAA2E,SAA3E,CAAhB;AARW,C;AADAhB,I,CAYZiB,Y,GAAe;AACpBf,aAAW,EADS;AAEpBC,YAAU,IAFU;AAGpBS,SAAO,EAHa;AAIpBR,QAAM,IAJc;AAKpBC,YAAU;AALU,C;AAZHL,I,CAoBZkB,K;AApBYlB,I,CAqBZmB,O;AArBYnB,I,CAsBZoB,M;AAtBYpB,I,CAuBZqB,M;kBAvBYrB,I","file":"card.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport CardImage from './components/image';\nimport CardContent from './components/content';\nimport CardHeader from './components/header';\nimport CardFooter from './components/footer';\n\nexport default class Card extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    style: PropTypes.shape({}),\n    renderAs: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    /**\n     * @deprecated please use Card.Header, Card.Content, Card.Footer instead\n     */\n    type: PropTypes.oneOf(['header', 'header-item', 'header-icon', 'footer', 'footer-item', 'image', 'content']),\n  }\n\n  static defaultProps = {\n    className: '',\n    children: null,\n    style: {},\n    type: null,\n    renderAs: 'div',\n  }\n\n  static Image = CardImage\n  static Content = CardContent\n  static Header = CardHeader\n  static Footer = CardFooter\n\n  render() {\n    const {\n      className,\n      children,\n      type,\n      renderAs,\n      ...props\n    } = this.props;\n    if (type) {\n      // eslint-disable-next-line no-console\n      console.warn('Deprecation Warning: Prop type is deprecated and will be removed on future release, please use Card.Header, Card.Content and Card.Footer elements instead');\n    }\n    if (type === 'image') {\n      return <CardImage {...props} className={className} />;\n    }\n    const Element = renderAs;\n    return (\n      <Element\n        className={classnames(className, {\n          [`card-${type}`]: type,\n          card: !type,\n        })}\n        {...props}\n      >\n        {children}\n      </Element>\n    );\n  }\n}\n\n"]}