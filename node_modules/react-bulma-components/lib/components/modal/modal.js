'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _content = require('./components/content');

var _content2 = _interopRequireDefault(_content);

var _card = require('./components/card');

var _card2 = _interopRequireDefault(_card);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var KEYCODES = {
  ESCAPE: 27
};

var Modal = function (_PureComponent) {
  _inherits(Modal, _PureComponent);

  function Modal() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Modal);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.getDocument = function () {
      if (_this.props.document) {
        return _this.props.document;
      }
      if (typeof document !== 'undefined') {
        return document;
      }
      return null;
    }, _this.portalElement = null, _this.handleKeydown = function (e) {
      if (e.keyCode === KEYCODES.ESCAPE && _this.props.show) {
        _this.props.onClose();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Modal, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var d = this.getDocument();
      this.portalElement = d.createElement('div');
      this.portalElement.setAttribute('class', 'modal-container');
      d.body.appendChild(this.portalElement);
      if (this.props.closeOnEsc) {
        d.addEventListener('keydown', this.handleKeydown);
      }
      // eslint-disable-next-line
      this.setState({ d: d });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var d = this.state.d;

      if (this.props.closeOnEsc) {
        d.removeEventListener('keydown', this.handleKeydown);
      }
      this.portalElement.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          closeOnBlur = _props.closeOnBlur,
          show = _props.show,
          className = _props.className;

      if (!this.getDocument() || !this.portalElement || !show) {
        return null;
      }
      var children = this.props.children;

      var isCard = void 0;
      try {
        isCard = _react2.default.Children.only(children).type.toString().indexOf('ModalCard') !== -1;
      } catch (e) {
        isCard = false;
      }

      var showClose = !isCard && this.props.showClose;

      if (isCard) {
        children = _react2.default.cloneElement(children, {
          onClose: this.props.onClose
        });
      }

      return _reactDom2.default.createPortal(_react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('modal', className, {
            'is-active': show
          })
        },
        _react2.default.createElement('div', { role: 'presentation', className: 'modal-background', onClick: closeOnBlur ? this.props.onClose : null }),
        children,
        showClose && _react2.default.createElement('button', { onClick: this.props.onClose, className: 'modal-close is-large', 'aria-label': 'close' })
      ), this.portalElement);
    }
  }]);

  return Modal;
}(_react.PureComponent);

Modal.propTypes = {
  show: _propTypes2.default.bool.isRequired,
  onClose: _propTypes2.default.func.isRequired,
  closeOnEsc: _propTypes2.default.bool,
  closeOnBlur: _propTypes2.default.bool,
  showClose: _propTypes2.default.bool,
  children: _propTypes2.default.element.isRequired,
  document: _propTypes2.default.object,
  className: _propTypes2.default.string
};
Modal.defaultProps = {
  closeOnEsc: true,
  showClose: true,
  closeOnBlur: false,
  className: '',
  // Expose mount point for testing
  document: null
};
Modal.Content = _content2.default;
Modal.Card = _card2.default;
exports.default = Modal;
//# sourceMappingURL=modal.js.map