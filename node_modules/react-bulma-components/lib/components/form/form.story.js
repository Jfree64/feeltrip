'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _react3 = require('@storybook/react');

var _addonInfo = require('@storybook/addon-info');

var _ = require('.');

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* eslint-disable react/no-multi-comp */
var HoC = function HoC(Component) {
  var Controlled = function (_React$Component) {
    _inherits(Controlled, _React$Component);

    function Controlled() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Controlled);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Controlled.__proto__ || Object.getPrototypeOf(Controlled)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        value: ''
      }, _this.onChange = function (evt) {
        _this.setState({
          value: evt.target.value
        });
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Controlled, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(Component, _extends({ onChange: this.onChange, value: this.state.value }, this.props));
      }
    }]);

    return Controlled;
  }(_react2.default.Component);

  Controlled.displayName = 'Select';

  return Controlled;
};

var HoCCheckbox = function HoCCheckbox(Component) {
  var Controlled = function (_React$Component2) {
    _inherits(Controlled, _React$Component2);

    function Controlled() {
      var _ref2;

      var _temp2, _this2, _ret2;

      _classCallCheck(this, Controlled);

      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, (_ref2 = Controlled.__proto__ || Object.getPrototypeOf(Controlled)).call.apply(_ref2, [this].concat(args))), _this2), _this2.state = {
        checked: false
      }, _this2.onChange = function (evt) {
        _this2.setState({
          checked: evt.target.checked
        });
      }, _temp2), _possibleConstructorReturn(_this2, _ret2);
    }

    _createClass(Controlled, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(Component, _extends({ onChange: this.onChange, checked: this.state.checked }, this.props));
      }
    }]);

    return Controlled;
  }(_react2.default.Component);

  Controlled.displayName = 'Checkbox';

  return Controlled;
};

var RadioGroup = function (_React$Component3) {
  _inherits(RadioGroup, _React$Component3);

  function RadioGroup() {
    var _ref3;

    var _temp3, _this3, _ret3;

    _classCallCheck(this, RadioGroup);

    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return _ret3 = (_temp3 = (_this3 = _possibleConstructorReturn(this, (_ref3 = RadioGroup.__proto__ || Object.getPrototypeOf(RadioGroup)).call.apply(_ref3, [this].concat(args))), _this3), _this3.state = {
      selected: null
    }, _this3.onChange = function (evt) {
      _this3.setState({
        selected: evt.target.value
      });
    }, _temp3), _possibleConstructorReturn(_this3, _ret3);
  }

  _createClass(RadioGroup, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _.Control,
        null,
        _react2.default.createElement(
          _.Radio,
          { onChange: this.onChange, checked: this.state.selected === 'Yes', value: 'Yes', name: 'question' },
          'Yes'
        ),
        _react2.default.createElement(
          _.Radio,
          { onChange: this.onChange, checked: this.state.selected === 'No', value: 'No', name: 'question' },
          'No'
        )
      );
    }
  }]);

  return RadioGroup;
}(_react2.default.Component);
/* eslint-enable react/no-multi-comp */


var SelectControlled = HoC(_.Select);
var CheckboxControlled = HoCCheckbox(_.Checkbox);

(0, _react3.storiesOf)('Form', module).addDecorator(function (story) {
  return _react2.default.createElement(
    'div',
    { style: { margin: 10 } },
    story()
  );
}).add('Default', (0, _addonInfo.withInfo)()(function () {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      _.Field,
      null,
      _react2.default.createElement(
        _.Label,
        null,
        'Name'
      ),
      _react2.default.createElement(
        _.Control,
        null,
        _react2.default.createElement(_.Input, { placeholder: 'Text input' })
      )
    ),
    _react2.default.createElement(
      _.Field,
      null,
      _react2.default.createElement(
        _.Label,
        null,
        'Username'
      ),
      _react2.default.createElement(
        _.Control,
        null,
        _react2.default.createElement(_.Input, { color: 'success', type: 'text', placeholder: 'Text input', value: 'bulma' })
      ),
      _react2.default.createElement(
        _.Help,
        { color: 'success' },
        'This username is available'
      )
    ),
    _react2.default.createElement(
      _.Field,
      null,
      _react2.default.createElement(
        _.Label,
        null,
        'Email'
      ),
      _react2.default.createElement(
        _.Control,
        null,
        _react2.default.createElement(_.Input, { color: 'danger', type: 'email', placeholder: 'Email input', value: 'hello@' })
      ),
      _react2.default.createElement(
        _.Help,
        { color: 'danger' },
        'This email is invalid'
      )
    ),
    _react2.default.createElement(
      _.Field,
      null,
      _react2.default.createElement(
        _.Label,
        null,
        'With Icons'
      ),
      _react2.default.createElement(
        _.Control,
        { iconLeft: true, iconRight: true },
        _react2.default.createElement(_.Input, { color: 'success', type: 'email', placeholder: 'I have icons' }),
        _react2.default.createElement(_icon2.default, { align: 'left', icon: 'bars' }),
        _react2.default.createElement(_icon2.default, { align: 'right', icon: 'bars' })
      ),
      _react2.default.createElement(
        _.Help,
        { color: 'danger' },
        'This email is invalid'
      )
    ),
    _react2.default.createElement(
      _.Field,
      null,
      _react2.default.createElement(
        _.Label,
        null,
        'Subject'
      ),
      _react2.default.createElement(
        _.Control,
        null,
        _react2.default.createElement(
          SelectControlled,
          null,
          _react2.default.createElement(
            'option',
            null,
            'Select dropdown'
          ),
          _react2.default.createElement(
            'option',
            null,
            'With options'
          )
        )
      )
    ),
    _react2.default.createElement(
      _.Field,
      null,
      _react2.default.createElement(
        _.Label,
        null,
        'Message'
      ),
      _react2.default.createElement(
        _.Control,
        null,
        _react2.default.createElement(_.Textarea, { placeholder: 'Textarea' })
      )
    ),
    _react2.default.createElement(
      _.Field,
      null,
      _react2.default.createElement(
        _.Control,
        null,
        _react2.default.createElement(
          CheckboxControlled,
          null,
          'I agree to the ',
          _react2.default.createElement(
            'a',
            { href: '#agree' },
            'terms and conditions'
          )
        )
      )
    ),
    _react2.default.createElement(
      _.Field,
      null,
      _react2.default.createElement(RadioGroup, null)
    ),
    _react2.default.createElement(
      _.Field,
      { kind: 'group' },
      _react2.default.createElement(
        _.Control,
        null,
        _react2.default.createElement(
          _button2.default,
          { type: 'primary' },
          'Submit'
        )
      ),
      _react2.default.createElement(
        _.Control,
        null,
        _react2.default.createElement(
          _button2.default,
          { color: 'link' },
          'Cancel'
        )
      )
    )
  );
})).add('Handle Multiple inputs', (0, _addonInfo.withInfo)({
  text: '\n    Check [React Docs](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n    ',
  source: false,
  propTables: []
})(function () {
  /* eslint-disable react/no-multi-comp */
  var MultiInputHandler = function (_PureComponent) {
    _inherits(MultiInputHandler, _PureComponent);

    function MultiInputHandler() {
      var _ref4;

      var _temp4, _this4, _ret4;

      _classCallCheck(this, MultiInputHandler);

      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return _ret4 = (_temp4 = (_this4 = _possibleConstructorReturn(this, (_ref4 = MultiInputHandler.__proto__ || Object.getPrototypeOf(MultiInputHandler)).call.apply(_ref4, [this].concat(args))), _this4), _this4.state = {
        email: '',
        name: '',
        password: '',
        comment: '',
        gender: '',
        question: null,
        termsAccepted: false
      }, _this4.onChange = function (evt) {
        var value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;
        _this4.setState(_defineProperty({}, evt.target.name, value));
      }, _temp4), _possibleConstructorReturn(_this4, _ret4);
    }

    _createClass(MultiInputHandler, [{
      key: 'render',
      value: function render() {
        var _state = this.state,
            email = _state.email,
            name = _state.name,
            password = _state.password,
            comment = _state.comment,
            gender = _state.gender,
            question = _state.question,
            termsAccepted = _state.termsAccepted;

        return _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            _.Field,
            null,
            _react2.default.createElement(
              _.Label,
              null,
              'Email'
            ),
            _react2.default.createElement(
              _.Control,
              null,
              _react2.default.createElement(_.Input, { onChange: this.onChange, name: 'email', type: 'email', placeholder: 'Email input', value: email })
            )
          ),
          _react2.default.createElement(
            _.Field,
            null,
            _react2.default.createElement(
              _.Label,
              null,
              'Name'
            ),
            _react2.default.createElement(
              _.Control,
              null,
              _react2.default.createElement(_.Input, { onChange: this.onChange, name: 'name', type: 'text', placeholder: 'Name input', value: name })
            )
          ),
          _react2.default.createElement(
            _.Field,
            null,
            _react2.default.createElement(
              _.Label,
              null,
              'Password'
            ),
            _react2.default.createElement(
              _.Control,
              null,
              _react2.default.createElement(_.Input, { onChange: this.onChange, name: 'password', type: 'password', placeholder: 'Password', value: password })
            )
          ),
          _react2.default.createElement(
            _.Field,
            null,
            _react2.default.createElement(
              _.Label,
              null,
              'Gender'
            ),
            _react2.default.createElement(
              _.Control,
              null,
              _react2.default.createElement(
                _.Select,
                { onChange: this.onChange, name: 'gender', value: gender },
                _react2.default.createElement(
                  'option',
                  { value: '' },
                  'Select'
                ),
                _react2.default.createElement(
                  'option',
                  { value: 'male' },
                  'Male'
                ),
                _react2.default.createElement(
                  'option',
                  { value: 'female' },
                  'Female'
                ),
                _react2.default.createElement(
                  'option',
                  { value: 'other' },
                  'Other?'
                )
              )
            )
          ),
          _react2.default.createElement(
            _.Field,
            null,
            _react2.default.createElement(
              _.Label,
              null,
              'Message'
            ),
            _react2.default.createElement(
              _.Control,
              null,
              _react2.default.createElement(_.Textarea, { name: 'comment', value: comment, onChange: this.onChange, placeholder: 'Textarea' })
            )
          ),
          _react2.default.createElement(
            _.Field,
            null,
            _react2.default.createElement(
              _.Label,
              null,
              'Do you undertood how to use me?'
            ),
            _react2.default.createElement(
              _.Control,
              null,
              _react2.default.createElement(
                _.Radio,
                { onChange: this.onChange, checked: question === 'Yes', value: 'Yes', name: 'question' },
                'Yes'
              ),
              _react2.default.createElement(
                _.Radio,
                { onChange: this.onChange, checked: question === 'No', value: 'No', name: 'question' },
                'No'
              )
            )
          ),
          _react2.default.createElement(
            _.Field,
            null,
            _react2.default.createElement(
              _.Control,
              null,
              _react2.default.createElement(
                _.Checkbox,
                { name: 'termsAccepted', onChange: this.onChange, checked: termsAccepted },
                'I agree to the ',
                _react2.default.createElement(
                  'a',
                  { href: '#agree' },
                  'terms and conditions'
                )
              )
            )
          ),
          _react2.default.createElement(
            'pre',
            null,
            _react2.default.createElement(
              'code',
              null,
              JSON.stringify(this.state, null, 2)
            )
          )
        );
      }
    }]);

    return MultiInputHandler;
  }(_react.PureComponent);

  return _react2.default.createElement(MultiInputHandler, null);
}));
//# sourceMappingURL=form.story.js.map