{"version":3,"sources":["../../../../src/components/form/components/input.js"],"names":["colors","concat","Object","keys","COLORS","map","key","Input","props","className","type","size","color","readOnly","isStatic","disabled","placeholder","value","name","propTypes","string","style","shape","oneOf","bool","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,CAAC,IAAD,EAAOC,MAAP,CAAcC,OAAOC,IAAP,CAAY,oBAAUC,MAAtB,EAA8BC,GAA9B,CAAkC;AAAA,SAAO,oBAAUD,MAAV,CAAiBE,GAAjB,CAAP;AAAA,CAAlC,CAAd,CAAf;;IAEqBC,K;;;;;;;;;;;6BAgCV;AAAA;;AAAA,mBAaH,KAAKC,KAbF;AAAA,UAELC,SAFK,UAELA,SAFK;AAAA,UAGLC,IAHK,UAGLA,IAHK;AAAA,UAILC,IAJK,UAILA,IAJK;AAAA,UAKLC,KALK,UAKLA,KALK;AAAA,UAMLC,QANK,UAMLA,QANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQLC,QARK,UAQLA,QARK;AAAA,UASLC,WATK,UASLA,WATK;AAAA,UAULC,KAVK,UAULA,KAVK;AAAA,UAWLC,IAXK,UAWLA,IAXK;AAAA,UAYFV,KAZE;;AAcP,aACE,oDACMA,KADN;AAEE,cAAMU,IAFR;AAGE,eAAOD,KAHT;AAIE,cAAMP,IAJR;AAKE,qBAAaM,WALf;AAME,kBAAUH,YAAYC,QANxB;AAOE,kBAAUC,QAPZ;AAQE,mBAAW,0BAAW,OAAX,EAAoBN,SAApB;AACT,uBAAaK;AADJ,gDAEFH,IAFE,EAEOA,IAFP,wCAGFC,KAHE,EAGQA,KAHR;AARb,SADF;AAgBD;;;;;;AA9DkBL,K,CACZY,S,GAAY;AACjBV,aAAW,oBAAUW,MADJ;AAEjBC,SAAO,oBAAUC,KAAV,CAAgB,EAAhB,CAFU;AAGjBZ,QAAM,oBAAUa,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,UAAzB,CAAhB,CAHW;AAIjBZ,QAAM,oBAAUY,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAJW;AAKjBX,SAAO,oBAAUW,KAAV,CAAgBvB,MAAhB,CALU;AAMjBa,YAAU,oBAAUW,IANH;AAOjBV,YAAU,oBAAUU,IAPH;AAQjBT,YAAU,oBAAUS,IARH;AASjBR,eAAa,oBAAUI,MATN;AAUjBH,SAAO,oBAAUG,MAVA;AAWjB;;;AAGAF,QAAM,oBAAUE;AAdC,C;AADAb,K,CAkBZkB,Y,GAAe;AACpBhB,aAAW,EADS;AAEpBQ,SAAO,EAFa;AAGpBI,SAAO,EAHa;AAIpBX,QAAM,MAJc;AAKpBC,QAAM,IALc;AAMpBC,SAAO,IANa;AAOpBC,YAAU,KAPU;AAQpBC,YAAU,KARU;AASpBC,YAAU,KATU;AAUpBC,eAAa,EAVO;AAWpBE,QAAM;AAXc,C;kBAlBHX,K","file":"input.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport CONSTANTS from '../../../constants';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nexport default class Input extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.shape({}),\n    type: PropTypes.oneOf(['text', 'email', 'tel', 'password']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    color: PropTypes.oneOf(colors),\n    readOnly: PropTypes.bool,\n    isStatic: PropTypes.bool,\n    disabled: PropTypes.bool,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    /**\n     * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n     */\n    name: PropTypes.string,\n  }\n\n  static defaultProps = {\n    className: '',\n    value: '',\n    style: {},\n    type: 'text',\n    size: null,\n    color: null,\n    readOnly: false,\n    isStatic: false,\n    disabled: false,\n    placeholder: '',\n    name: null,\n  }\n\n  render() {\n    const {\n      className,\n      type,\n      size,\n      color,\n      readOnly,\n      isStatic,\n      disabled,\n      placeholder,\n      value,\n      name,\n      ...props\n    } = this.props;\n    return (\n      <input\n        {...props}\n        name={name}\n        value={value}\n        type={type}\n        placeholder={placeholder}\n        readOnly={readOnly || isStatic}\n        disabled={disabled}\n        className={classnames('input', className, {\n          'is-static': isStatic,\n          [`is-${size}`]: size,\n          [`is-${color}`]: color,\n        })}\n      />\n    );\n  }\n}\n"]}