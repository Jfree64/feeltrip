{"version":3,"sources":["../../../../src/components/form/components/textarea.js"],"names":["colors","concat","Object","keys","COLORS","map","key","Textarea","props","className","size","color","readOnly","disabled","placeholder","rows","value","name","propTypes","string","style","shape","oneOf","bool","number","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAGA;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,CAAC,IAAD,EAAOC,MAAP,CAAcC,OAAOC,IAAP,CAAY,oBAAUC,MAAtB,EAA8BC,GAA9B,CAAkC;AAAA,SAAO,oBAAUD,MAAV,CAAiBE,GAAjB,CAAP;AAAA,CAAlC,CAAd,CAAf;;IAEqBC,Q;;;;;;;;;;;6BA8BV;AAAA;;AAAA,mBAYH,KAAKC,KAZF;AAAA,UAELC,SAFK,UAELA,SAFK;AAAA,UAGLC,IAHK,UAGLA,IAHK;AAAA,UAILC,KAJK,UAILA,KAJK;AAAA,UAKLC,QALK,UAKLA,QALK;AAAA,UAMLC,QANK,UAMLA,QANK;AAAA,UAOLC,WAPK,UAOLA,WAPK;AAAA,UAQLC,IARK,UAQLA,IARK;AAAA,UASLC,KATK,UASLA,KATK;AAAA,UAULC,IAVK,UAULA,IAVK;AAAA,UAWFT,KAXE;;AAaP,aACE;AACE,cAAMS;AADR,SAEMT,KAFN;AAGE,eAAOQ,KAHT;AAIE,cAAMD,IAJR;AAKE,qBAAaD,WALf;AAME,kBAAUF,QANZ;AAOE,kBAAUC,QAPZ;AAQE,mBAAW,0BAAW,UAAX,EAAuBJ,SAAvB,0DACJC,IADI,EACKA,IADL,wCAEJC,KAFI,EAEMA,KAFN;AARb,SADF;AAeD;;;;;;AA1DkBJ,Q,CACZW,S,GAAY;AACjBT,aAAW,oBAAUU,MADJ;AAEjBC,SAAO,oBAAUC,KAAV,CAAgB,EAAhB,CAFU;AAGjBX,QAAM,oBAAUY,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAHW;AAIjBX,SAAO,oBAAUW,KAAV,CAAgBtB,MAAhB,CAJU;AAKjBY,YAAU,oBAAUW,IALH;AAMjBV,YAAU,oBAAUU,IANH;AAOjBT,eAAa,oBAAUK,MAPN;AAQjBJ,QAAM,oBAAUS,MARC;AASjBR,SAAO,oBAAUG,MATA;AAUjB;;;AAGAF,QAAM,oBAAUE;AAbC,C;AADAZ,Q,CAiBZkB,Y,GAAe;AACpBhB,aAAW,EADS;AAEpBW,SAAO,EAFa;AAGpBV,QAAM,IAHc;AAIpBC,SAAO,IAJa;AAKpBC,YAAU,KALU;AAMpBC,YAAU,KANU;AAOpBC,eAAa,EAPO;AAQpBC,QAAM,CARc;AASpBC,SAAO,EATa;AAUpBC,QAAM;AAVc,C;kBAjBHV,Q","file":"textarea.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nimport CONSTANTS from '../../../constants';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nexport default class Textarea extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.shape({}),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    color: PropTypes.oneOf(colors),\n    readOnly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    placeholder: PropTypes.string,\n    rows: PropTypes.number,\n    value: PropTypes.string,\n    /**\n     * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n     */\n    name: PropTypes.string,\n  }\n\n  static defaultProps = {\n    className: '',\n    style: {},\n    size: null,\n    color: null,\n    readOnly: false,\n    disabled: false,\n    placeholder: '',\n    rows: 4,\n    value: '',\n    name: '',\n  }\n\n  render() {\n    const {\n      className,\n      size,\n      color,\n      readOnly,\n      disabled,\n      placeholder,\n      rows,\n      value,\n      name,\n      ...props\n    } = this.props;\n    return (\n      <textarea\n        name={name}\n        {...props}\n        value={value}\n        rows={rows}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        disabled={disabled}\n        className={classnames('textarea', className, {\n        [`is-${size}`]: size,\n        [`is-${color}`]: color,\n      })}\n      />\n    );\n  }\n}\n"]}