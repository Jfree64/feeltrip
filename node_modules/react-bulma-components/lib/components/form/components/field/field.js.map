{"version":3,"sources":["../../../../../src/components/form/components/field/field.js"],"names":["Field","props","className","renderAs","align","multiline","horizontal","kind","Element","k","propTypes","children","node","string","style","shape","oneOfType","func","oneOf","bool","defaultProps","Label","Body"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;IAGqBA,K;;;;;;;;;;;6BA0BV;AAAA;;AAAA,mBASH,KAAKC,KATF;AAAA,UAELC,SAFK,UAELA,SAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,UAILC,KAJK,UAILA,KAJK;AAAA,UAKLC,SALK,UAKLA,SALK;AAAA,UAMLC,UANK,UAMLA,UANK;AAAA,UAOLC,IAPK,UAOLA,IAPK;AAAA,UAQFN,KARE;;AAUP,UAAMO,UAAUL,QAAhB;AACA,UAAIM,IAAI,IAAR;;AAEA,UAAIF,SAAS,QAAb,EAAuB;AACrBE,YAAI,YAAJ;AACD,OAFD,MAEO,IAAIF,SAAS,OAAb,EAAsB;AAC3BE,YAAI,YAAJ;AACD;;AAED,aACE,8BAAC,OAAD,eACMR,KADN;AAEE,mBAAW,0BAAW,OAAX,EAAoBC,SAApB,uDACLO,CADK,EACCA,CADD,gCAELA,CAFK,SAEAL,KAFA,EAEUK,KAAKL,KAFf,gCAGLK,CAHK,iBAGWA,MAAM,YAAN,IAAsBJ,SAHjC,gCAIT,eAJS,EAIQC,UAJR;AAFb,SADF;AAWD;;;;;;AAxDkBN,K,CACZU,S,GAAY;AACjBC,YAAU,oBAAUC,IADH;AAEjBV,aAAW,oBAAUW,MAFJ;AAGjBC,SAAO,oBAAUC,KAAV,CAAgB,EAAhB,CAHU;AAIjBZ,YAAU,oBAAUa,SAAV,CAAoB,CAAC,oBAAUH,MAAX,EAAmB,oBAAUI,IAA7B,CAApB,CAJO;AAKjBb,SAAO,oBAAUc,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,CAAhB,CALU;AAMjBX,QAAM,oBAAUW,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CANW;AAOjBb,aAAW,oBAAUc,IAPJ;AAQjBb,cAAY,oBAAUa;AARL,C;AADAnB,K,CAYZoB,Y,GAAe;AACpBT,YAAU,IADU;AAEpBT,aAAW,EAFS;AAGpBY,SAAO,EAHa;AAIpBX,YAAU,KAJU;AAKpBC,SAAO,IALa;AAMpBG,QAAM,IANc;AAOpBF,aAAW,KAPS;AAQpBC,cAAY;AARQ,C;AAZHN,K,CAuBZqB,K;AAvBYrB,K,CAwBZsB,I;kBAxBYtB,K","file":"field.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport FieldLabel from './field-label';\nimport FieldBody from './field-body';\n\n\nexport default class Field extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    style: PropTypes.shape({}),\n    renderAs: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    align: PropTypes.oneOf(['centered', 'right']),\n    kind: PropTypes.oneOf(['addons', 'group']),\n    multiline: PropTypes.bool,\n    horizontal: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    children: null,\n    className: '',\n    style: {},\n    renderAs: 'div',\n    align: null,\n    kind: null,\n    multiline: false,\n    horizontal: false,\n  };\n\n  static Label = FieldLabel;\n  static Body = FieldBody;\n\n  render() {\n    const {\n      className,\n      renderAs,\n      align,\n      multiline,\n      horizontal,\n      kind,\n      ...props\n    } = this.props;\n    const Element = renderAs;\n    let k = null;\n\n    if (kind === 'addons') {\n      k = 'has-addons';\n    } else if (kind === 'group') {\n      k = 'is-grouped';\n    }\n\n    return (\n      <Element\n        {...props}\n        className={classnames('field', className, {\n          [`${k}`]: k,\n          [`${k}-${align}`]: k && align,\n          [`${k}-multiline`]: k === 'is-grouped' && multiline,\n          'is-horizontal': horizontal,\n        })}\n      />\n    );\n  }\n}\n"]}