{"version":3,"sources":["../../../src/components/form/form.story.js"],"names":["HoC","Component","Controlled","state","value","onChange","evt","setState","target","props","displayName","HoCCheckbox","checked","RadioGroup","selected","SelectControlled","CheckboxControlled","module","addDecorator","margin","story","add","text","source","propTables","MultiInputHandler","email","name","password","comment","gender","question","termsAccepted","type","JSON","stringify"],"mappings":"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","file":"form.story.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { storiesOf } from '@storybook/react';\nimport { withInfo } from '@storybook/addon-info';\n\nimport { Field, Control, Label, Input, Textarea, Select, Checkbox, Radio, Help } from '.';\nimport Button from '../button';\nimport Icon from '../icon';\n\n/* eslint-disable react/no-multi-comp */\nconst HoC = (Component) => {\n  class Controlled extends React.Component {\n    static displayName = 'Select'\n\n    state = {\n      value: '',\n    }\n\n    onChange = (evt) => {\n      this.setState({\n        value: evt.target.value,\n      });\n    }\n\n    render() {\n      return <Component onChange={this.onChange} value={this.state.value} {...this.props} />;\n    }\n  }\n  return Controlled;\n};\n\nconst HoCCheckbox = (Component) => {\n  class Controlled extends React.Component {\n    static displayName = 'Checkbox'\n    state = {\n      checked: false,\n    }\n\n    onChange = (evt) => {\n      this.setState({\n        checked: evt.target.checked,\n      });\n    }\n\n    render() {\n      return <Component onChange={this.onChange} checked={this.state.checked} {...this.props} />;\n    }\n  }\n  return Controlled;\n};\n\nclass RadioGroup extends React.Component {\n  state = {\n    selected: null,\n  }\n\n  onChange = (evt) => {\n    this.setState({\n      selected: evt.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <Control>\n        <Radio onChange={this.onChange} checked={this.state.selected === 'Yes'} value=\"Yes\" name=\"question\">\n          Yes\n        </Radio>\n        <Radio onChange={this.onChange} checked={this.state.selected === 'No'} value=\"No\" name=\"question\" >\n          No\n        </Radio>\n      </Control>\n    );\n  }\n}\n/* eslint-enable react/no-multi-comp */\nconst SelectControlled = HoC(Select);\nconst CheckboxControlled = HoCCheckbox(Checkbox);\n\nstoriesOf('Form', module)\n  .addDecorator(story => (\n    <div style={{ margin: 10 }}>\n      {story()}\n    </div>\n  ))\n  .add('Default', withInfo()(() => (\n    <div>\n      <Field>\n        <Label>Name</Label>\n        <Control>\n          <Input placeholder=\"Text input\" />\n        </Control>\n      </Field>\n\n      <Field>\n        <Label>Username</Label>\n        <Control>\n          <Input color=\"success\" type=\"text\" placeholder=\"Text input\" value=\"bulma\" />\n        </Control>\n        <Help color=\"success\">This username is available</Help>\n      </Field>\n\n      <Field>\n        <Label>Email</Label>\n        <Control>\n          <Input color=\"danger\" type=\"email\" placeholder=\"Email input\" value=\"hello@\" />\n        </Control>\n        <Help color=\"danger\">This email is invalid</Help>\n      </Field>\n      <Field>\n        <Label>With Icons</Label>\n        <Control iconLeft iconRight>\n          <Input color=\"success\" type=\"email\" placeholder=\"I have icons\" />\n          <Icon align=\"left\" icon=\"bars\" />\n          <Icon align=\"right\" icon=\"bars\" />\n        </Control>\n        <Help color=\"danger\">This email is invalid</Help>\n      </Field>\n      <Field>\n        <Label>Subject</Label>\n        <Control>\n          <SelectControlled>\n            <option>Select dropdown</option>\n            <option>With options</option>\n          </SelectControlled>\n        </Control>\n      </Field>\n\n      <Field>\n        <Label>Message</Label>\n        <Control>\n          <Textarea placeholder=\"Textarea\" />\n        </Control>\n      </Field>\n\n      <Field>\n        <Control>\n          <CheckboxControlled>\n            I agree to the <a href=\"#agree\">terms and conditions</a>\n          </CheckboxControlled>\n        </Control>\n      </Field>\n\n      <Field>\n        <RadioGroup />\n      </Field>\n\n      <Field kind=\"group\">\n        <Control>\n          <Button type=\"primary\">Submit</Button>\n        </Control>\n        <Control>\n          <Button color=\"link\">Cancel</Button>\n        </Control>\n      </Field>\n    </div>\n  )))\n  .add('Handle Multiple inputs', withInfo({\n    text: `\n    Check [React Docs](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n    `,\n    source: false,\n    propTables: [],\n  })(() => {\n    /* eslint-disable react/no-multi-comp */\n    class MultiInputHandler extends PureComponent {\n      state = {\n        email: '',\n        name: '',\n        password: '',\n        comment: '',\n        gender: '',\n        question: null,\n        termsAccepted: false,\n      }\n\n      onChange = (evt) => {\n        const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n        this.setState({\n          [evt.target.name]: value,\n        });\n      }\n\n      render() {\n        const { email, name, password, comment, gender, question, termsAccepted } = this.state;\n        return (\n          <div>\n            <Field>\n              <Label>Email</Label>\n              <Control>\n                <Input onChange={this.onChange} name=\"email\" type=\"email\" placeholder=\"Email input\" value={email} />\n              </Control>\n            </Field>\n            <Field>\n              <Label>Name</Label>\n              <Control>\n                <Input onChange={this.onChange} name=\"name\" type=\"text\" placeholder=\"Name input\" value={name} />\n              </Control>\n            </Field>\n            <Field>\n              <Label>Password</Label>\n              <Control>\n                <Input onChange={this.onChange} name=\"password\" type=\"password\" placeholder=\"Password\" value={password} />\n              </Control>\n            </Field>\n            <Field>\n              <Label>Gender</Label>\n              <Control>\n                <Select onChange={this.onChange} name=\"gender\" value={gender}>\n                  <option value=\"\">Select</option>\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                  <option value=\"other\">Other?</option>\n                </Select>\n              </Control>\n            </Field>\n            <Field>\n              <Label>Message</Label>\n              <Control>\n                <Textarea name=\"comment\" value={comment} onChange={this.onChange} placeholder=\"Textarea\" />\n              </Control>\n            </Field>\n            <Field>\n              <Label>Do you undertood how to use me?</Label>\n              <Control>\n                <Radio onChange={this.onChange} checked={question === 'Yes'} value=\"Yes\" name=\"question\">\n                  Yes\n                </Radio>\n                <Radio onChange={this.onChange} checked={question === 'No'} value=\"No\" name=\"question\" >\n                  No\n                </Radio>\n              </Control>\n            </Field>\n            <Field>\n              <Control>\n                <Checkbox name=\"termsAccepted\" onChange={this.onChange} checked={termsAccepted}>\n                  I agree to the <a href=\"#agree\">terms and conditions</a>\n                </Checkbox>\n              </Control>\n            </Field>\n            <pre>\n              <code>\n                {JSON.stringify(this.state, null, 2)}\n              </code>\n            </pre>\n          </div>\n        );\n      }\n    }\n    return <MultiInputHandler />;\n  }));\n"]}