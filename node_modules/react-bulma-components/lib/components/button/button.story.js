'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react3 = require('@storybook/react');

var _addonInfo = require('@storybook/addon-info');

var _ = require('.');

var _2 = _interopRequireDefault(_);

var _section = require('../section');

var _section2 = _interopRequireDefault(_section);

var _box = require('../box');

var _box2 = _interopRequireDefault(_box);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Link = function Link(_ref) {
  var to = _ref.to,
      children = _ref.children,
      className = _ref.className;
  return _react2.default.createElement(
    'a',
    { className: className, href: to },
    children
  );
};

Link.propTypes = {
  to: _propTypes2.default.string.isRequired,
  className: _propTypes2.default.string.isRequired,
  children: _propTypes2.default.node.isRequired
};

(0, _react3.storiesOf)('Button', module).addDecorator(function (story) {
  return _react2.default.createElement(
    'div',
    { className: 'button-display' },
    story()
  );
}).add('By Colors', (0, _addonInfo.withInfo)('Buttons implmentation')(function () {
  return _react2.default.createElement(
    _section2.default,
    null,
    _react2.default.createElement(
      _box2.default,
      null,
      _react2.default.createElement(
        _2.default,
        null,
        'Normal'
      ),
      _react2.default.createElement(
        _2.default,
        { color: 'primary' },
        'Primary'
      ),
      _react2.default.createElement(
        _2.default,
        { color: 'info' },
        'Info'
      ),
      _react2.default.createElement(
        _2.default,
        { color: 'danger' },
        'Danger'
      ),
      _react2.default.createElement(
        _2.default,
        { color: 'warning' },
        'Warning'
      ),
      _react2.default.createElement(
        _2.default,
        { color: 'success' },
        'Success'
      ),
      _react2.default.createElement(
        _2.default,
        { color: 'white' },
        'White'
      ),
      _react2.default.createElement(
        _2.default,
        { color: 'light' },
        'Light'
      ),
      _react2.default.createElement(
        _2.default,
        { color: 'dark' },
        'Dark'
      ),
      _react2.default.createElement(
        _2.default,
        { color: 'black' },
        'Black'
      ),
      _react2.default.createElement(
        _2.default,
        { color: 'link' },
        'Link'
      )
    )
  );
})).add('Other Styles', (0, _addonInfo.withInfo)('Other buttons styles')(function () {
  return _react2.default.createElement(
    _section2.default,
    null,
    _react2.default.createElement(
      _box2.default,
      null,
      _react2.default.createElement(
        _2.default,
        { fullwidth: true, color: 'primary' },
        'Full Width'
      ),
      _react2.default.createElement(
        _2.default,
        { loading: true, color: 'info' },
        'Loading'
      ),
      _react2.default.createElement(
        _2.default,
        { outlined: true, color: 'danger' },
        'Warning Outlined'
      ),
      _react2.default.createElement(
        _2.default,
        { inverted: true, color: 'success' },
        'Success Inverted'
      ),
      _react2.default.createElement(
        _2.default,
        { disabled: true, color: 'info' },
        'Disabled'
      ),
      _react2.default.createElement(
        _2.default,
        { renderAs: Link, hrefAttr: 'to', color: 'primary', href: 'http://google.com' },
        'Custom component'
      ),
      _react2.default.createElement(
        _2.default,
        { text: true },
        'Underlined Text Button'
      ),
      _react2.default.createElement(_2.default, { remove: true }),
      _react2.default.createElement(
        'div',
        { style: { background: '#4c4c4c', padding: 20, width: 200, margin: 10, display: 'flex', alignItems: 'center', justifyContent: 'center' } },
        _react2.default.createElement(
          _2.default,
          { inverted: true, outlined: true, type: 'success' },
          'Inverted Outlined'
        )
      )
    )
  );
}));
//# sourceMappingURL=button.story.js.map