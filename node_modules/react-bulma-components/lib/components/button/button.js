'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _constants = require('../../constants');

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var colors = [null].concat(Object.keys(_constants2.default.COLORS).map(function (key) {
  return _constants2.default.COLORS[key];
}));

var Button = function (_PureComponent) {
  _inherits(Button, _PureComponent);

  function Button() {
    _classCallCheck(this, Button);

    return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  _createClass(Button, [{
    key: 'render',
    value: function render() {
      var _classnames;

      var _props = this.props,
          children = _props.children,
          className = _props.className,
          renderAs = _props.renderAs,
          color = _props.color,
          size = _props.size,
          outlined = _props.outlined,
          inverted = _props.inverted,
          state = _props.state,
          submit = _props.submit,
          reset = _props.reset,
          fullwidth = _props.fullwidth,
          loading = _props.loading,
          disabled = _props.disabled,
          remove = _props.remove,
          href = _props.href,
          hrefAttr = _props.hrefAttr,
          isStatic = _props.isStatic,
          onClick = _props.onClick,
          text = _props.text,
          props = _objectWithoutProperties(_props, ['children', 'className', 'renderAs', 'color', 'size', 'outlined', 'inverted', 'state', 'submit', 'reset', 'fullwidth', 'loading', 'disabled', 'remove', 'href', 'hrefAttr', 'isStatic', 'onClick', 'text']);

      var Element = isStatic ? 'span' : renderAs;
      var otherProps = {};
      if (href) {
        otherProps[renderAs === 'a' ? 'href' : hrefAttr] = href;
        if (renderAs !== 'a' && !hrefAttr) {
          // eslint-disable-next-line no-console
          console.error('warning: if renderAs is different the anchor (a), hrefAttr is required. Check Button props');
        }
      }
      if (submit) {
        Element = 'button';
        otherProps.type = 'submit';
      }
      if (reset) {
        Element = 'button';
        otherProps.type = 'reset';
      }

      return _react2.default.createElement(
        Element,
        _extends({
          tabIndex: disabled ? -1 : 0
        }, props, otherProps, {
          disabled: disabled,
          onClick: disabled ? undefined : onClick,
          className: (0, _classnames3.default)(className, (_classnames = {}, _defineProperty(_classnames, 'is-' + color, color), _defineProperty(_classnames, 'is-' + size, size), _defineProperty(_classnames, 'is-' + state, state), _defineProperty(_classnames, 'is-outlined', outlined), _defineProperty(_classnames, 'is-inverted', inverted), _defineProperty(_classnames, 'is-fullwidth', fullwidth), _defineProperty(_classnames, 'is-loading', loading), _defineProperty(_classnames, 'is-text', text), _defineProperty(_classnames, 'delete', remove), _defineProperty(_classnames, 'button', !remove), _classnames))
        }),
        children
      );
    }
  }]);

  return Button;
}(_react.PureComponent);

Button.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  href: _propTypes2.default.string,
  hrefAttr: _propTypes2.default.string,
  style: _propTypes2.default.shape({}),
  renderAs: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['a', 'button']), _propTypes2.default.func]),
  onClick: _propTypes2.default.func,
  color: _propTypes2.default.oneOf(colors),
  size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
  state: _propTypes2.default.oneOf(['hover', 'focus', 'active', 'loading']),
  outlined: _propTypes2.default.bool,
  inverted: _propTypes2.default.bool,
  submit: _propTypes2.default.bool,
  reset: _propTypes2.default.bool,
  loading: _propTypes2.default.bool,
  fullwidth: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  remove: _propTypes2.default.bool,
  isStatic: _propTypes2.default.bool,
  text: _propTypes2.default.bool
};
Button.defaultProps = {
  children: null,
  className: '',
  href: '',
  hrefAttr: '',
  style: {},
  renderAs: 'a',
  onClick: function onClick() {
    return null;
  },
  color: null,
  size: null,
  state: null,
  outlined: false,
  inverted: false,
  submit: false,
  reset: false,
  fullwidth: false,
  loading: false,
  disabled: false,
  remove: false,
  isStatic: false,
  text: false
};
exports.default = Button;
//# sourceMappingURL=button.js.map