{"version":3,"sources":["../../../src/components/columns/columns.js"],"names":["breakpoints","concat","Object","keys","CONSTANTS","BREAKPOINTS","map","key","Columns","props","children","className","breakpoint","gapless","multiline","centered","PureComponent","propTypes","PropTypes","node","string","style","shape","oneOf","bool","defaultProps","Column","COLUMN_CONSTANTS"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,cAAc,CAAC,IAAD,EAAOC,MAAP,CAAcC,OAAOC,IAAP,CAAYC,oBAAUC,WAAtB,EAAmCC,GAAnC,CAAuC;AAAA,SAAOF,oBAAUC,WAAV,CAAsBE,GAAtB,CAAP;AAAA,CAAvC,CAAd,CAApB;;IAEqBC,O;;;;;;;;;;;6BAoCV;AAAA;;AAAA,mBASH,KAAKC,KATF;AAAA,UAELC,QAFK,UAELA,QAFK;AAAA,UAGLC,SAHK,UAGLA,SAHK;AAAA,UAILC,UAJK,UAILA,UAJK;AAAA,UAKLC,OALK,UAKLA,OALK;AAAA,UAMLC,SANK,UAMLA,SANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQFN,KARE;;AAUP,aACE;AAAA;AAAA,qBACMA,KADN;AAEE,qBAAW,0BAAWE,SAAX,EAAsB,SAAtB,0DACJC,UADI,EACWA,UADX,gCAEX,YAFW,EAEGC,OAFH,gCAGX,cAHW,EAGKC,SAHL,gCAIX,aAJW,EAIIC,QAJJ;AAFb;AASGL;AATH,OADF;AAaD;;;;EA3DkCM,oB;;AAAhBR,O,CACZS,S,GAAY;AACjBP,YAAUQ,oBAAUC,IADH;AAEjBR,aAAWO,oBAAUE,MAFJ;AAGjBC,SAAOH,oBAAUI,KAAV,CAAgB,EAAhB,CAHU;AAIjB;;;AAGAV,cAAYM,oBAAUK,KAAV,CAAgBvB,WAAhB,CAPK;AAQjB;;;AAGAa,WAASK,oBAAUM,IAXF;AAYjB;;;AAGAV,aAAWI,oBAAUM,IAfJ;AAgBjB;;;AAGAT,YAAUG,oBAAUM;AAnBH,C;AADAhB,O,CAuBZiB,Y,GAAe;AACpBf,YAAU,IADU;AAEpBC,aAAW,EAFS;AAGpBU,SAAO,EAHa;AAIpBT,cAAY,IAJQ;AAKpBC,WAAS,KALW;AAMpBE,YAAU,KANU;AAOpBD,aAAW;AAPS,C;AAvBHN,O,CAiCZkB,M,GAASA,gB;AAjCGlB,O,CAkCZJ,S,GAAYuB,mB;kBAlCAnB,O","file":"columns.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CONSTANTS from '../../constants';\nimport Column from './components/column';\nimport COLUMN_CONSTANTS from './constants';\n\nconst breakpoints = [null].concat(Object.keys(CONSTANTS.BREAKPOINTS).map(key => CONSTANTS.BREAKPOINTS[key]));\n\nexport default class Columns extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    style: PropTypes.shape({}),\n    /**\n     * Breakpoint where columns become stacked.\n     */\n    breakpoint: PropTypes.oneOf(breakpoints),\n    /**\n     * `true` to remove space between columns\n     */\n    gapless: PropTypes.bool,\n    /**\n     * `true` if you want to use more than one line if you add more column elements that would fit in a single row.\n     */\n    multiline: PropTypes.bool,\n    /**\n     * `true` you want the columns inside to be horizontaly centered\n     */\n    centered: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    children: null,\n    className: '',\n    style: {},\n    breakpoint: null,\n    gapless: false,\n    centered: false,\n    multiline: true,\n  }\n\n  static Column = Column\n  static CONSTANTS = COLUMN_CONSTANTS\n\n  render() {\n    const {\n      children,\n      className,\n      breakpoint,\n      gapless,\n      multiline,\n      centered,\n      ...props\n    } = this.props;\n    return (\n      <div\n        {...props}\n        className={classNames(className, 'columns', {\n        [`is-${breakpoint}`]: breakpoint,\n        'is-gapless': gapless,\n        'is-multiline': multiline,\n        'is-centered': centered,\n      })}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n"]}