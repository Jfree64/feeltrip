'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _canUseDom = require('../../services/can-use-dom');

var _canUseDom2 = _interopRequireDefault(_canUseDom);

var _brand = require('./components/brand');

var _brand2 = _interopRequireDefault(_brand);

var _burger = require('./components/burger');

var _burger2 = _interopRequireDefault(_burger);

var _menu = require('./components/menu');

var _menu2 = _interopRequireDefault(_menu);

var _item = require('./components/item');

var _item2 = _interopRequireDefault(_item);

var _dropdown = require('./components/dropdown');

var _dropdown2 = _interopRequireDefault(_dropdown);

var _divider = require('./components/divider');

var _divider2 = _interopRequireDefault(_divider);

var _link = require('./components/link');

var _link2 = _interopRequireDefault(_link);

var _container = require('./components/container');

var _container2 = _interopRequireDefault(_container);

var _constants = require('../../constants');

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var colors = [null].concat(Object.keys(_constants2.default.COLORS).map(function (key) {
  return _constants2.default.COLORS[key];
}));

var Navbar = function (_React$PureComponent) {
  _inherits(Navbar, _React$PureComponent);

  function Navbar() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Navbar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Navbar.__proto__ || Object.getPrototypeOf(Navbar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      showMobileMenu: false
    }, _this.toggleMenu = function () {
      _this.setState(function (_ref2) {
        var showMobileMenu = _ref2.showMobileMenu;
        return { showMobileMenu: !showMobileMenu };
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Navbar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.fixed) {
        window.document.querySelector('html').classList.add('has-navbar-fixed-' + this.props.fixed);
      }
    }

    // TODO: Remove this on future releases

  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      Navbar.getDerivedStateFromProps(nextProps);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.document.querySelector('html').classList.remove('has-navbar-fixed-' + this.props.fixed);
    }
  }, {
    key: 'render',
    value: function render() {
      var _classnames,
          _this2 = this;

      var _props = this.props,
          children = _props.children,
          className = _props.className,
          renderAs = _props.renderAs,
          fixed = _props.fixed,
          transparent = _props.transparent,
          color = _props.color,
          props = _objectWithoutProperties(_props, ['children', 'className', 'renderAs', 'fixed', 'transparent', 'color']);

      var Element = renderAs;

      return _react2.default.createElement(
        Element,
        _extends({}, props, {
          role: 'navigation',
          className: (0, _classnames3.default)('navbar', className, (_classnames = {
            'is-transparent': transparent
          }, _defineProperty(_classnames, 'is-fixed-' + fixed, fixed), _defineProperty(_classnames, 'is-' + color, color), _classnames))
        }),
        _react2.default.Children.map(children, function (child) {
          if ([_brand2.default].includes(child.type)) {
            return _react2.default.cloneElement(child, { active: _this2.state.showMobileMenu, toggleMenu: _this2.toggleMenu });
          }
          if ([_menu2.default].includes(child.type)) {
            return _react2.default.cloneElement(child, { active: _this2.state.showMobileMenu });
          }
          return child;
        })
      );
    }
  }], [{
    key: 'getDerivedStateFromProps',
    value: function getDerivedStateFromProps(nextProps) {
      if (!_canUseDom2.default) {
        return null;
      }
      var html = window.document.querySelector('html');
      html.classList.remove('has-navbar-fixed-top');
      html.classList.remove('has-navbar-fixed-bottom');
      if (nextProps.fixed) {
        html.classList.add('has-navbar-fixed-' + nextProps.fixed);
      }
      return null;
    }
  }]);

  return Navbar;
}(_react2.default.PureComponent);

Navbar.Brand = _brand2.default;
Navbar.Burger = _burger2.default;
Navbar.Menu = _menu2.default;
Navbar.Item = _item2.default;
Navbar.Dropdown = _dropdown2.default;
Navbar.Link = _link2.default;
Navbar.Divider = _divider2.default;
Navbar.Container = _container2.default;
Navbar.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  style: _propTypes2.default.shape({}),
  transparent: _propTypes2.default.bool,
  renderAs: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  fixed: _propTypes2.default.oneOf(['top', 'bottom']),
  color: _propTypes2.default.oneOf(colors)
};
Navbar.defaultProps = {
  children: null,
  className: '',
  style: {},
  renderAs: 'nav',
  transparent: false,
  fixed: null,
  color: null
};
exports.default = Navbar;
//# sourceMappingURL=navbar.js.map