{"version":3,"sources":["../../../../src/components/navbar/components/item.js"],"names":["NavbarItem","props","className","active","renderAs","children","dropdown","dropdownUp","hoverable","Element","PureComponent","displayName","propTypes","style","shape","string","bool","node","oneOfType","func","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,U;;;;;;;;;;;6BAuBV;AAAA,mBAUH,KAAKC,KAVF;AAAA,UAELC,SAFK,UAELA,SAFK;AAAA,UAGLC,MAHK,UAGLA,MAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAKLC,QALK,UAKLA,QALK;AAAA,UAMLC,QANK,UAMLA,QANK;AAAA,UAOLC,UAPK,UAOLA,UAPK;AAAA,UAQLC,SARK,UAQLA,SARK;AAAA,UASFP,KATE;;AAYP,UAAIQ,UAAUL,QAAd;AACA,UAAIE,YAAYG,YAAY,GAA5B,EAAiC;AAC/BA,kBAAU,MAAV;AACD;AACD,aACE;AAAC,eAAD;AAAA,qBACMR,KADN;AAEE,qBAAW,0BAAW,aAAX,EAA0BC,SAA1B,EAAqC;AAC9C,yBAAaC,MADiC;AAE9C,4BAAgBG,QAF8B;AAG9C,4BAAgBE,SAH8B;AAI9C,+BAAmBD;AAJ2B,WAArC;AAFb;AASGF;AATH,OADF;AAaD;;;;EApDqC,gBAAMK,a;;AAAzBV,U,CACZW,W,GAAc,a;AADFX,U,CAEZY,S,GAAY;AACjBC,SAAO,oBAAUC,KAAV,CAAgB,EAAhB,CADU;AAEjBZ,aAAW,oBAAUa,MAFJ;AAGjBZ,UAAQ,oBAAUa,IAHD;AAIjBV,YAAU,oBAAUU,IAJH;AAKjBT,cAAY,oBAAUS,IALL;AAMjBR,aAAW,oBAAUQ,IANJ;AAOjBX,YAAU,oBAAUY,IAPH;AAQjBb,YAAU,oBAAUc,SAAV,CAAoB,CAAC,oBAAUH,MAAX,EAAmB,oBAAUI,IAA7B,CAApB;AARO,C;AAFAnB,U,CAaZoB,Y,GAAe;AACpBP,SAAO,EADa;AAEpBX,aAAW,EAFS;AAGpBC,UAAQ,KAHY;AAIpBE,YAAU,IAJU;AAKpBC,YAAU,KALU;AAMpBE,aAAW,KANS;AAOpBD,cAAY,KAPQ;AAQpBH,YAAU;AARU,C;kBAbHJ,U","file":"item.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport default class NavbarItem extends React.PureComponent {\n  static displayName = 'Navbar.Item'\n  static propTypes = {\n    style: PropTypes.shape({}),\n    className: PropTypes.string,\n    active: PropTypes.bool,\n    dropdown: PropTypes.bool,\n    dropdownUp: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    children: PropTypes.node,\n    renderAs: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  }\n\n  static defaultProps = {\n    style: {},\n    className: '',\n    active: false,\n    children: null,\n    dropdown: false,\n    hoverable: false,\n    dropdownUp: false,\n    renderAs: 'a',\n  }\n  render() {\n    const {\n      className,\n      active,\n      renderAs,\n      children,\n      dropdown,\n      dropdownUp,\n      hoverable,\n      ...props\n    } = this.props;\n\n    let Element = renderAs;\n    if (dropdown && Element === 'a') {\n      Element = 'span';\n    }\n    return (\n      <Element\n        {...props}\n        className={classnames('navbar-item', className, {\n          'is-active': active,\n          'has-dropdown': dropdown,\n          'is-hoverable': hoverable,\n          'has-dropdown-up': dropdownUp,\n        })}\n      >\n        {children}\n      </Element>\n    );\n  }\n}\n\n"]}