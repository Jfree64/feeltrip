{"version":3,"sources":["../../../../src/components/navbar/components/brand.js"],"names":["NavbarBrand","props","className","children","active","toggleMenu","Children","map","child","includes","type","cloneElement","PureComponent","displayName","propTypes","style","shape","string","node","bool","func","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,W;;;;;;;;;;;6BAkBV;AAAA,mBAOH,KAAKC,KAPF;AAAA,UAELC,SAFK,UAELA,SAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,UAILC,MAJK,UAILA,MAJK;AAAA,UAKLC,UALK,UAKLA,UALK;AAAA,UAMFJ,KANE;;AAQP,aACE;AAAA;AAAA,qBACMA,KADN;AAEE,qBAAW,0BAAW,cAAX,EAA2BC,SAA3B;AAFb;AAIG,wBAAMI,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA6B,UAACK,KAAD,EAAW;AACvC,cAAI,mBAASC,QAAT,CAAkBD,MAAME,IAAxB,CAAJ,EAAmC;AACjC,mBAAO,gBAAMC,YAAN,CAAmBH,KAAnB,EAA0B,EAAEJ,cAAF,EAAUC,sBAAV,EAA1B,CAAP;AACD;AACD,iBAAOG,KAAP;AACD,SALA;AAJH,OADF;AAaD;;;;EAvCsC,gBAAMI,a;;AAA1BZ,W,CACZa,W,GAAc,c;AADFb,W,CAEZc,S,GAAY;AACjBC,SAAO,oBAAUC,KAAV,CAAgB,EAAhB,CADU;AAEjBd,aAAW,oBAAUe,MAFJ;AAGjBd,YAAU,oBAAUe,IAHH;AAIjBd,UAAQ,oBAAUe,IAJD;AAKjBd,cAAY,oBAAUe;AALL,C;AAFApB,W,CAUZqB,Y,GAAe;AACpBN,SAAO,EADa;AAEpBb,aAAW,EAFS;AAGpBC,YAAU,IAHU;AAIpBC,UAAQ,KAJY;AAKpBC,cAAY,sBAAM,CAAE;AALA,C;kBAVHL,W","file":"brand.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Burger from './burger';\n\nexport default class NavbarBrand extends React.PureComponent {\n  static displayName = 'Navbar.Brand'\n  static propTypes = {\n    style: PropTypes.shape({}),\n    className: PropTypes.string,\n    children: PropTypes.node,\n    active: PropTypes.bool,\n    toggleMenu: PropTypes.func,\n  }\n\n  static defaultProps = {\n    style: {},\n    className: '',\n    children: null,\n    active: false,\n    toggleMenu: () => {},\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      active,\n      toggleMenu,\n      ...props\n    } = this.props;\n    return (\n      <div\n        {...props}\n        className={classnames('navbar-brand', className)}\n      >\n        {React.Children.map(children, (child) => {\n          if ([Burger].includes(child.type)) {\n            return React.cloneElement(child, { active, toggleMenu });\n          }\n          return child;\n        })}\n      </div>\n    );\n  }\n}\n"]}