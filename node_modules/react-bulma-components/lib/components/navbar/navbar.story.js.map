{"version":3,"sources":["../../../src/components/navbar/navbar.story.js"],"names":["colors","concat","Object","keys","COLORS","map","key","module","addDecorator","margin","story","add","Component","state","color","children","props","cloneElement","marginTop","setState","filter","c","fixed","height","undefined"],"mappings":"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","file":"navbar.story.js","sourcesContent":["\n/* eslint-disable react/no-multi-comp, react/prop-types */\nimport React, { Fragment } from 'react';\n\nimport { storiesOf } from '@storybook/react';\nimport { withInfo } from '@storybook/addon-info';\nimport { Field, Control } from '../form';\nimport Button from '../button';\nimport CONSTANTS from '../../constants';\n\nimport Navbar from '.';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nstoriesOf('Navbar', module)\n  .addDecorator(story => (\n    <div style={{ margin: 10 }}>\n      {story()}\n    </div>\n  ))\n  .add('Default', withInfo('Default Implementation')(() => (\n    <Navbar>\n      <Navbar.Brand>\n        <Navbar.Item renderAs=\"a\" href=\"#\">\n          <img src=\"https://bulma.io/images/bulma-logo.png\" alt=\"Bulma: a modern CSS framework based on Flexbox\" width=\"112\" height=\"28\" />\n        </Navbar.Item>\n        <Navbar.Burger />\n      </Navbar.Brand>\n      <Navbar.Menu>\n        <Navbar.Container>\n          <Navbar.Item Dropdown hoverable>\n            <Navbar.Link>\n            Docs\n            </Navbar.Link>\n            <Navbar.Dropdown boxed>\n              <Navbar.Item href=\"#\">\n                Home\n              </Navbar.Item>\n              <Navbar.Item href=\"#\">\n                List\n              </Navbar.Item>\n              <Navbar.Item href=\"#\">\n                Another Item\n              </Navbar.Item>\n              <Navbar.Divider />\n              <Navbar.Item active href=\"#\">\n                Active\n              </Navbar.Item>\n            </Navbar.Dropdown>\n          </Navbar.Item>\n          <Navbar.Item href=\"#\">\n            Second\n          </Navbar.Item>\n        </Navbar.Container>\n        <Navbar.Container position=\"end\">\n          <Navbar.Item Dropdown hoverable>\n            <Navbar.Link>\n              Other Menu\n            </Navbar.Link>\n            <Navbar.Dropdown right boxed>\n              <Navbar.Item href=\"#\">\n                this is aligned to the right\n              </Navbar.Item>\n            </Navbar.Dropdown>\n          </Navbar.Item>\n        </Navbar.Container>\n      </Navbar.Menu>\n    </Navbar>\n  )))\n  .add('Colors', withInfo()(() => {\n    class Component extends React.Component {\n      state = {\n        color: null,\n      }\n      render() {\n        const { children } = this.props;\n        return (\n          <Fragment>\n            {React.cloneElement(children, { color: this.state.color })}\n\n            <div style={{ marginTop: '2rem' }}>\n              <Field kind=\"group\">\n                <Control>\n                  <Button color={null} onClick={() => this.setState({ color: null })}>default</Button>\n                </Control>\n                {colors\n                  .filter(c => !!c)\n                  .map(color => (\n                    <Control key={color}>\n                      <Button color={color} onClick={() => this.setState({ color })}>{color}</Button>\n                    </Control>\n                ))}\n              </Field>\n            </div>\n          </Fragment>\n        );\n      }\n    }\n    return (\n      <Component>\n        <Navbar>\n          <Navbar.Brand>\n            <Navbar.Item renderAs=\"a\" href=\"#\">\n              <img src=\"https://bulma.io/images/bulma-logo.png\" alt=\"Bulma: a modern CSS framework based on Flexbox\" width=\"112\" height=\"28\" />\n            </Navbar.Item>\n            <Navbar.Burger />\n          </Navbar.Brand>\n          <Navbar.Menu>\n            <Navbar.Container>\n              <Navbar.Item dropdown hoverable>\n                <Navbar.Link>\n                  Docs\n                </Navbar.Link>\n                <Navbar.Dropdown boxed>\n                  <Navbar.Item href=\"#\">\n                    Home\n                  </Navbar.Item>\n                  <Navbar.Item href=\"#\">\n                    List\n                  </Navbar.Item>\n                  <Navbar.Item href=\"#\">\n                    Another Item\n                  </Navbar.Item>\n                  <Navbar.Divider />\n                  <Navbar.Item active href=\"#\">\n                    Active\n                  </Navbar.Item>\n                </Navbar.Dropdown>\n              </Navbar.Item>\n              <Navbar.Item href=\"#\">\n                    Second\n              </Navbar.Item>\n            </Navbar.Container>\n            <Navbar.Container position=\"end\">\n              <Navbar.Item href=\"#\">\n                    At the end\n              </Navbar.Item>\n            </Navbar.Container>\n          </Navbar.Menu>\n        </Navbar>\n      </Component>\n    );\n  }))\n  .add('Fixed', withInfo('Default Implementation')(() => {\n    class Component extends React.Component {\n      state = {\n        fixed: null,\n      }\n      render() {\n        const { children } = this.props;\n        const { fixed } = this.state;\n        return (\n          <Fragment>\n            {React.cloneElement(children, { fixed })}\n\n            <div style={{ height: '150vh' }}>\n              <Field kind=\"group\">\n                <Control>\n                  <Button onClick={() => this.setState({ fixed: 'top' })}>Fixed Top</Button>\n                </Control>\n                <Control>\n                  <Button onClick={() => this.setState({ fixed: 'bottom' })}>Fixed Botton</Button>\n                </Control>\n                <Control>\n                  <Button onClick={() => this.setState({ fixed: undefined })}>Normal</Button>\n                </Control>\n              </Field>\n            </div>\n          </Fragment>\n        );\n      }\n    }\n    return (\n      <Component>\n        <Navbar>\n          <Navbar.Brand>\n            <Navbar.Item renderAs=\"a\" href=\"#\">\n              <img src=\"https://bulma.io/images/bulma-logo.png\" alt=\"Bulma: a modern CSS framework based on Flexbox\" width=\"112\" height=\"28\" />\n            </Navbar.Item>\n            <Navbar.Burger />\n          </Navbar.Brand>\n          <Navbar.Menu>\n            <Navbar.Container>\n              <Navbar.Item href=\"#\">\n                    Second\n              </Navbar.Item>\n            </Navbar.Container>\n            <Navbar.Container position=\"end\">\n              <Navbar.Item href=\"#\">\n                    At the end\n              </Navbar.Item>\n            </Navbar.Container>\n          </Navbar.Menu>\n        </Navbar>\n      </Component>\n    );\n  }));\n"]}