{"version":3,"sources":["../../../../../../src/components/menu/components/list/components/item.js"],"names":["MenuListItem","props","children","active","className","renderAs","Element","Children","only","type","child","title","cloneElement","displayName","propTypes","string","oneOfType","element","bool","func","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,Y;;;;;;;;;;;6BAsBV;AAAA,mBAOH,KAAKC,KAPF;AAAA,UAELC,QAFK,UAELA,QAFK;AAAA,UAGLC,MAHK,UAGLA,MAHK;AAAA,UAILC,SAJK,UAILA,SAJK;AAAA,UAKLC,QALK,UAKLA,QALK;AAAA,UAMFJ,KANE;;AAQP,UAAMK,UAAUD,QAAhB;AACA,UAAI,OAAOH,QAAP,KAAoB,QAAxB,EAAkC;AAChC,eACE;AAAA;AAAA;AACE;AAAC,mBAAD;AAAA,uBAAS,WAAW,0BAAWE,SAAX,EAAsB,EAAE,aAAaD,MAAf,EAAtB,CAApB,IAAwEF,KAAxE;AAAgFC;AAAhF;AADF,SADF;AAKD;;AAED,UAAI,gBAAMK,QAAN,CAAeC,IAAf,CAAoBN,QAApB,EAA8BO,IAA9B,mBAAJ,EAAiD;AAC/C,YAAMC,QAAQ,gBAAMH,QAAN,CAAeC,IAAf,CAAoBN,QAApB,CAAd;AACA,eACE;AAAA;AAAA;AACE;AAAC,mBAAD;AAAA,uBAAS,WAAW,0BAAWE,SAAX,EAAsB,EAAE,aAAaD,MAAf,EAAtB,CAApB,IAAwEF,KAAxE;AAAgFS,kBAAMT,KAAN,CAAYU;AAA5F,WADF;AAEG,0BAAMC,YAAN,CAAmBF,KAAnB,EAA0B,EAAEC,OAAO,IAAT,EAA1B;AAFH,SADF;AAMD;;AAED,aAAO;AAAA;AAAA;AAAKT;AAAL,OAAP;AACD;;;;;;AAlDkBF,Y,CACZa,W,GAAc,gB;AADFb,Y,CAGZc,S,GAAY;AACjBV,aAAW,oBAAUW,MADJ;AAEjBb,YAAU,oBAAUc,SAAV,CAAoB,CAC5B,oBAAUD,MADkB,EAE5B,oBAAUE,OAFkB,CAApB,CAFO;AAMjBd,UAAQ,oBAAUe,IAND;AAOjBb,YAAU,oBAAUW,SAAV,CAAoB,CAC5B,oBAAUD,MADkB,EAE5B,oBAAUI,IAFkB,CAApB;AAPO,C;AAHAnB,Y,CAgBZoB,Y,GAAe;AACpBhB,aAAW,EADS;AAEpBF,YAAU,IAFU;AAGpBC,UAAQ,KAHY;AAIpBE,YAAU;AAJU,C;kBAhBHL,Y","file":"item.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport List from '../list';\n\nexport default class MenuListItem extends PureComponent {\n  static displayName = 'Menu.List.Item'\n\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n    ]),\n    active: PropTypes.bool,\n    renderAs: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]),\n  }\n\n  static defaultProps = {\n    className: '',\n    children: null,\n    active: false,\n    renderAs: 'a',\n  }\n  render() {\n    const {\n      children,\n      active,\n      className,\n      renderAs,\n      ...props\n    } = this.props;\n    const Element = renderAs;\n    if (typeof children === 'string') {\n      return (\n        <li>\n          <Element className={classnames(className, { 'is-active': active })} {...props}>{children}</Element>\n        </li>\n      );\n    }\n\n    if (React.Children.only(children).type === List) {\n      const child = React.Children.only(children);\n      return (\n        <li>\n          <Element className={classnames(className, { 'is-active': active })} {...props}>{child.props.title}</Element>\n          {React.cloneElement(child, { title: null })}\n        </li>\n      );\n    }\n\n    return <li>{children}</li>;\n  }\n}\n"]}