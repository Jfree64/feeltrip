{"version":3,"sources":["../../../src/components/image/image.js"],"names":["Image","props","onError","setState","src","fallback","state","nextProps","className","alt","size","s","propTypes","string","style","shape","oneOf","SIZES","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;IAEqBA,K;;;AAmBnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8GACXA,KADW;;AAAA,UAenBC,OAfmB,GAeT,YAAM;AACd,YAAKC,QAAL,CAAc;AACZC,aAAK,MAAKH,KAAL,CAAWI;AADJ,OAAd;AAGD,KAnBkB;;AAEjB,UAAKC,KAAL,GAAa;AACXF,WAAKH,MAAMG;AADA,KAAb;AAFiB;AAKlB;;;;8CAEyBG,S,EAAW;AACnC,UAAIA,UAAUH,GAAV,KAAkB,KAAKH,KAAL,CAAWG,GAAjC,EAAsC;AACpC,aAAKD,QAAL,CAAc;AACZC,eAAKG,UAAUH;AADH,SAAd;AAGD;AACF;;;6BAQQ;AAAA,mBAQH,KAAKH,KARF;AAAA,UAELO,SAFK,UAELA,SAFK;AAAA,UAGLC,GAHK,UAGLA,GAHK;AAAA,UAILC,IAJK,UAILA,IAJK;AAAA,UAKLL,QALK,UAKLA,QALK;AAAA,UAMLD,GANK,UAMLA,GANK;AAAA,UAOFH,KAPE;;AAUP,UAAIU,IAAI,KAAKV,KAAL,CAAWS,IAAnB;;AAEA,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BC,YAAOA,CAAP,SAAYA,CAAZ;AACD;;AAED,aACE;AAAA;AAAA,qBACMV,KADN;AAEE,qBAAW,0BAAW,OAAX,EAAoBO,SAApB,8BACFG,CADE,EACIA,CADJ;AAFb;AAME,+CAAK,SAAS,KAAKT,OAAnB,EAA4B,KAAK,KAAKI,KAAL,CAAWF,GAA5C,EAAiD,KAAKK,GAAtD;AANF,OADF;AAUD;;;;;;AAlEkBT,K,CACZY,S,GAAY;AACjBJ,aAAW,oBAAUK,MADJ;AAEjBT,OAAK,oBAAUS,MAFE;AAGjBJ,OAAK,oBAAUI,MAHE;AAIjBC,SAAO,oBAAUC,KAAV,CAAgB,EAAhB,CAJU;AAKjBL,QAAM,oBAAUM,KAAV,CAAgB,oBAAUC,KAA1B,CALW;AAMjBZ,YAAU,oBAAUQ;AANH,C;AADAb,K,CAUZkB,Y,GAAe;AACpBV,aAAW,EADS;AAEpBJ,OAAK,EAFe;AAGpBK,OAAK,EAHe;AAIpBK,SAAO,EAJa;AAKpBJ,QAAM,IALc;AAMpBL,YAAU;AANU,C;kBAVHL,K","file":"image.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from './constants';\n\nexport default class Image extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    src: PropTypes.string,\n    alt: PropTypes.string,\n    style: PropTypes.shape({}),\n    size: PropTypes.oneOf(CONSTANTS.SIZES),\n    fallback: PropTypes.string,\n  }\n\n  static defaultProps = {\n    className: '',\n    src: '',\n    alt: '',\n    style: {},\n    size: null,\n    fallback: 'http//bulma.io/images/placeholders/480x480.png',\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      src: props.src,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.src !== this.props.src) {\n      this.setState({\n        src: nextProps.src,\n      });\n    }\n  }\n\n  onError = () => {\n    this.setState({\n      src: this.props.fallback,\n    });\n  }\n\n  render() {\n    const {\n      className,\n      alt,\n      size,\n      fallback,\n      src,\n      ...props\n    } = this.props;\n\n    let s = this.props.size;\n\n    if (typeof size === 'number') {\n      s = `${s}x${s}`;\n    }\n\n    return (\n      <figure\n        {...props}\n        className={classnames('image', className, {\n          [`is-${s}`]: s,\n        })}\n      >\n        <img onError={this.onError} src={this.state.src} alt={alt} />\n      </figure>\n    );\n  }\n}\n"]}